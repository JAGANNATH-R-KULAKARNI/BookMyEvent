import { ValidationError } from "express-validator";
export declare abstract class ErrorSuperClass extends Error {
    abstract HTTPStatusCode: number;
    constructor(message: string);
    abstract errorMessage(): {
        message: string;
        field?: string;
    }[];
}
export declare class BadRequestError extends ErrorSuperClass {
    message: string;
    HTTPStatusCode: number;
    constructor(message: string);
    errorMessage(): {
        message: string;
    }[];
}
export declare class DatabaseConnectionError extends ErrorSuperClass {
    HTTPStatusCode: number;
    constructor();
    errorMessage(): {
        message: string;
    }[];
}
export declare class UnAuthorizedError extends ErrorSuperClass {
    HTTPStatusCode: number;
    constructor();
    errorMessage(): {
        message: string;
    }[];
}
export declare class NotFoundError extends ErrorSuperClass {
    HTTPStatusCode: number;
    constructor();
    errorMessage(): {
        message: string;
    }[];
}
export declare class InvalidRequestError extends ErrorSuperClass {
    private errors;
    HTTPStatusCode: number;
    constructor(errors: ValidationError[]);
    errorMessage(): {
        message: any;
        field: string;
    }[];
}
